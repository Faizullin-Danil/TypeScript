Promise — это объект, представляющий результат асинхронной операции    
    
    Три состояния промиса:
pending (ожидание)
fulfilled (выполнен успешно)
rejected (выполнен с ошибкой)

    Методы для обработки промиса:
.then(callback)
Выполняется только при успешном resolve().
Можно объединять then() в цепочку.
Каждый then() возвращает новый Promise.

.catch(callback)
Выполняется только при ошибке (reject()).
Перехватывает ошибки из любого предыдущего then().

.finally(callback)
Выполняется всегда (и при resolve(), и при reject()).


Promise.all([])
Принимает массив промисов
Возвращает промис (вернет массив значений промисов, если все промисы выполнились, или вернет reject того промиса, который не выполнился)

Promise.race([])
Принимает массив промисов
Возвращает результат первого завершившегося промиса

Promise.allSettled([])
принимает массив промисов
ждет завершения всез промисов(успешных и неуспешных)
и возвращает массив с их статусами и значениями